TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 6 files
Detected 15 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: src/layer.py
--------------------------------------------------------------------------------
src/layer.py:7:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:17:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:27:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:49:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:55:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:61:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:67:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:86:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
src/layer.py:92:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: src/train.py
--------------------------------------------------------------------------------
src/train.py:91:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
src/train.py:93:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
src/train.py:131:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: src/train2.py
--------------------------------------------------------------------------------
src/train2.py:103:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
src/train2.py:105:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
src/train2.py:144:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: 'src/'
================================================================================
--------------------------------------------------------------------------------
Processing file 'src/layer.py'
 outputting to 'src-upgraded/layer.py'
--------------------------------------------------------------------------------

7:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
7:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
11:20: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

13:11: INFO: Added keywords to args of function 'tf.nn.conv2d'
13:11: INFO: Renamed keyword argument for tf.nn.conv2d from filter to filters
17:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
17:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
21:20: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

27:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
27:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
31:20: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

38:32: INFO: Added keywords to args of function 'tf.nn.moments'
39:21: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
40:20: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
49:11: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
49:11: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
53:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
53:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
55:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
55:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
59:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
59:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
61:15: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
61:15: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
65:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
65:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
67:14: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
67:14: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
71:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
71:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
74:11: INFO: Added keywords to args of function 'tf.cond'
80:17: INFO: Added keywords to args of function 'tf.transpose'
86:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
86:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
90:20: INFO: tf.truncated_normal_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
90:20: INFO: Renamed 'tf.truncated_normal_initializer' to 'tf.compat.v1.truncated_normal_initializer'
92:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
92:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
96:20: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
96:20: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/load.py'
 outputting to 'src-upgraded/load.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/network.py'
 outputting to 'src-upgraded/network.py'
--------------------------------------------------------------------------------

12:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
12:45: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
13:27: INFO: Renamed 'tf.get_collection' to 'tf.compat.v1.get_collection'
13:45: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
17:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
18:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
22:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
26:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
30:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
34:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
38:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
42:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
46:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
50:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
54:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
58:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
62:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
66:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
70:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
74:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
78:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
82:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
92:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
93:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
97:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
101:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
105:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
109:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
113:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
120:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
121:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
125:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
129:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
133:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
137:21: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
142:13: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
145:17: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
154:15: INFO: Added keywords to args of function 'tf.reduce_mean'
159:22: INFO: Added keywords to args of function 'tf.reduce_mean'
160:22: INFO: Added keywords to args of function 'tf.reduce_mean'
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/train.py'
 outputting to 'src-upgraded/train.py'
--------------------------------------------------------------------------------

33:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
34:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
35:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
36:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
37:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
38:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
45:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
49:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
54:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
65:17: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
90:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
91:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
93:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
130:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
131:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/train2.py'
 outputting to 'src-upgraded/train2.py'
--------------------------------------------------------------------------------

38:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
39:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
40:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
41:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
42:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
43:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
47:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
54:10: INFO: Renamed 'tf.train.AdamOptimizer' to 'tf.compat.v1.train.AdamOptimizer'
60:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
65:16: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
77:17: INFO: Renamed 'tf.assign' to 'tf.compat.v1.assign'
102:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
103:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
105:16: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
143:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
144:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file 'src/test\\test.py'
 outputting to 'src-upgraded/test\\test.py'
--------------------------------------------------------------------------------

21:8: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
22:11: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
23:14: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
24:24: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
25:23: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
26:18: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
29:11: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
30:14: INFO: Renamed 'tf.global_variables_initializer' to 'tf.compat.v1.global_variables_initializer'
33:12: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
--------------------------------------------------------------------------------

